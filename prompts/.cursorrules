# 网站开发规则

## 项目结构规则

1. 项目必须遵循清晰的目录结构，不允许将所有代码放在单一文件中
2. 必须采用组件化开发方式，将UI和功能拆分为可复用的组件
3. 代码必须按照以下目录结构组织：
   - `/assets`: 存放静态资源（图片、字体等）
   - `/css`: 存放样式文件
   - `/js`: 存放JavaScript文件
   - `/components`: 存放可复用的组件
   - `/pages`: 存放页面级组件
   - `/utils`: 存放工具函数和辅助代码
   - `/lib`: 存放第三方库或自定义库

## 文件命名规则

1. 所有文件名使用小写字母，多个单词用连字符（-）连接
2. HTML文件使用描述性名称，如`about-us.html`、`product-detail.html`
3. CSS文件应与对应的HTML文件或组件同名，如`header.css`
4. JavaScript文件应与其功能相关，如`form-validation.js`、`image-slider.js`

## 代码组织规则

1. HTML结构、CSS样式和JavaScript逻辑必须分离：
   - HTML负责结构
   - CSS负责样式
   - JavaScript负责交互和逻辑
2. 每个组件应包含自己的HTML、CSS和JS文件
3. 公共样式应放在全局CSS文件中
4. 公共函数应放在工具函数文件中

## 组件化开发规则

1. 每个UI元素应设计为独立组件，如导航栏、页脚、轮播图等
2. 组件应具有明确的职责和功能边界
3. 组件应设计为可复用的，避免重复代码
4. 组件之间的通信应通过明确的接口进行

## 代码质量规则

1. 代码必须有适当的注释，注释用中文，解释复杂逻辑和功能
2. 变量和函数名应具有描述性，遵循驼峰命名法
3. 避免使用全局变量，优先使用模块化方式组织代码
4. CSS应使用类选择器，避免使用ID选择器和内联样式
5. JavaScript代码应遵循最佳实践，避免使用过时的方法

## 响应式设计规则

1. 网站必须采用响应式设计，适应不同屏幕尺寸
2. 使用媒体查询（media queries）处理不同设备的样式
3. 使用相对单位（如%、em、rem）而非固定像素值
4. 图片和媒体资源应针对不同设备进行优化

## 性能优化规则

1. 最小化HTTP请求数量
2. 压缩和合并CSS和JavaScript文件
3. 优化图片大小和格式
4. 使用延迟加载技术处理非关键资源

## 可访问性规则

1. 遵循WCAG（Web内容可访问性指南）标准
2. 使用语义化HTML元素
3. 提供适当的替代文本和ARIA属性
4. 确保键盘导航和屏幕阅读器兼容性 